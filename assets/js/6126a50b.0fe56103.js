"use strict";(self.webpackChunkworkflows_docs=self.webpackChunkworkflows_docs||[]).push([[836],{6002:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>t});const r=JSON.parse('{"id":"workflows/dart_package","title":"Dart Package","description":"This workflow runs helpful checks on a Dart package according to the steps below. As with any workflow, it can be customized.","source":"@site/docs/workflows/dart_package.md","sourceDirName":"workflows","slug":"/workflows/dart_package","permalink":"/docs/workflows/dart_package","draft":false,"unlisted":false,"editUrl":"https://github.com/VeryGoodOpenSource/very_good_workflows/tree/main/site/docs/workflows/dart_package.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Workflows","permalink":"/docs/category/workflows"},"next":{"title":"Dart Pub Publish","permalink":"/docs/workflows/dart_pub_publish"}}');var o=s(4848),l=s(8453);const d={sidebar_position:1},c="Dart Package",i={},t=[{value:"Steps",id:"steps",level:2},{value:"Inputs",id:"inputs",level:2},{value:"<code>concurrency</code>",id:"concurrency",level:3},{value:"<code>coverage_excludes</code>",id:"coverage_excludes",level:3},{value:"<code>dart_sdk</code>",id:"dart_sdk",level:3},{value:"<code>format_line_length</code>",id:"format_line_length",level:3},{value:"<code>min_coverage</code>",id:"min_coverage",level:3},{value:"<code>working_directory</code>",id:"working_directory",level:3},{value:"<code>analyze_directories</code>",id:"analyze_directories",level:3},{value:"<code>format_directories</code>",id:"format_directories",level:3},{value:"<code>check_ignore</code>",id:"check_ignore",level:3},{value:"<code>report_on</code>",id:"report_on",level:3},{value:"<code>runs_on</code>",id:"runs_on",level:3},{value:"<code>setup</code>",id:"setup",level:3},{value:"<code>platform</code>",id:"platform",level:3},{value:"<code>run_skipped</code>",id:"run_skipped",level:3},{value:"<code>no_example</code>",id:"no_example",level:3},{value:"Secrets",id:"secrets",level:2},{value:"<code>ssh_key</code>",id:"ssh_key",level:3},{value:"Example Usage",id:"example-usage",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,l.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"dart-package",children:"Dart Package"})}),"\n",(0,o.jsx)(n.p,{children:"This workflow runs helpful checks on a Dart package according to the steps below. As with any workflow, it can be customized."}),"\n",(0,o.jsx)(n.h2,{id:"steps",children:"Steps"}),"\n",(0,o.jsx)(n.p,{children:"The Dart package workflow consists of the following steps:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Install dependencies"}),"\n",(0,o.jsx)(n.li,{children:"Format"}),"\n",(0,o.jsx)(n.li,{children:"Analyze"}),"\n",(0,o.jsx)(n.li,{children:"Run tests"}),"\n",(0,o.jsx)(n.li,{children:"Check code coverage"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"inputs",children:"Inputs"}),"\n",(0,o.jsx)(n.h3,{id:"concurrency",children:(0,o.jsx)(n.code,{children:"concurrency"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Optional"})," The number of concurrent test suites run."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Default"})," ",(0,o.jsx)(n.code,{children:"4"})]}),"\n",(0,o.jsx)(n.h3,{id:"coverage_excludes",children:(0,o.jsx)(n.code,{children:"coverage_excludes"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Optional"})," List of paths to exclude from the coverage report, separated by an empty space. Supports ",(0,o.jsx)(n.code,{children:"globs"})," to describe file patterns."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Default"})," ",(0,o.jsx)(n.code,{children:'""'})]}),"\n",(0,o.jsx)(n.h3,{id:"dart_sdk",children:(0,o.jsx)(n.code,{children:"dart_sdk"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Optional"})," Which Dart SDK version to use. It can be a version (e.g. ",(0,o.jsx)(n.code,{children:"3.5.0"}),") or a channel (e.g. ",(0,o.jsx)(n.code,{children:"stable"}),"):"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Default"})," ",(0,o.jsx)(n.code,{children:'"stable"'})]}),"\n",(0,o.jsx)(n.h3,{id:"format_line_length",children:(0,o.jsx)(n.code,{children:"format_line_length"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Optional"})," The preferred line length preferred for running the ",(0,o.jsx)(n.code,{children:"dart format"})," command. Be aware that this does not change the behavior of the analysis step and longer lines could still make the workflow fail if the rule ",(0,o.jsx)(n.code,{children:"lines_longer_than_80_chars"})," is used."]}),"\n",(0,o.jsx)(n.h3,{id:"min_coverage",children:(0,o.jsx)(n.code,{children:"min_coverage"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Optional"})," The minimum coverage percentage allowed."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Default"})," 100"]}),"\n",(0,o.jsx)(n.h3,{id:"working_directory",children:(0,o.jsx)(n.code,{children:"working_directory"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Optional"})," The path to the root of the Dart package."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Default"})," ",(0,o.jsx)(n.code,{children:'"."'})]}),"\n",(0,o.jsx)(n.h3,{id:"analyze_directories",children:(0,o.jsx)(n.code,{children:"analyze_directories"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Optional"})," A space-separated list of folders that should be analyzed."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Default"})," ",(0,o.jsx)(n.code,{children:'"lib test"'})]}),"\n",(0,o.jsx)(n.h3,{id:"format_directories",children:(0,o.jsx)(n.code,{children:"format_directories"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Optional"})," A space-separated list of folders that should be formatted."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Default"})," ",(0,o.jsx)(n.code,{children:'"."'})]}),"\n",(0,o.jsx)(n.h3,{id:"check_ignore",children:(0,o.jsx)(n.code,{children:"check_ignore"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Optional"})," Allows ignoring lines from ",(0,o.jsx)(n.a,{href:"https://pub.dev/packages/coverage",children:"coverage"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Default"})," ",(0,o.jsx)(n.code,{children:"false"})]}),"\n",(0,o.jsx)(n.h3,{id:"report_on",children:(0,o.jsx)(n.code,{children:"report_on"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Optional"})," A comma-separated list of folders that should be checked in code coverage."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Default"})," ",(0,o.jsx)(n.code,{children:'"lib"'})]}),"\n",(0,o.jsx)(n.h3,{id:"runs_on",children:(0,o.jsx)(n.code,{children:"runs_on"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Optional"})," The operating system on which to run the workflow."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Default"})," ",(0,o.jsx)(n.code,{children:'"ubuntu-latest"'})]}),"\n",(0,o.jsx)(n.h3,{id:"setup",children:(0,o.jsx)(n.code,{children:"setup"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Optional"})," A command that should be executed immediately after dependencies are installed."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Default"})," ",(0,o.jsx)(n.code,{children:'""'})]}),"\n",(0,o.jsx)(n.h3,{id:"platform",children:(0,o.jsx)(n.code,{children:"platform"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Optional"})," A comma-separated list of platforms on which to run the tests.\n",(0,o.jsx)(n.code,{children:"[vm (default), chrome, firefox, safari, node]"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Default"})," ",(0,o.jsx)(n.code,{children:'"vm"'})]}),"\n",(0,o.jsx)(n.h3,{id:"run_skipped",children:(0,o.jsx)(n.code,{children:"run_skipped"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Optional"})," Run skipped tests instead of skipping them."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Default"})," ",(0,o.jsx)(n.code,{children:"false"})]}),"\n",(0,o.jsx)(n.h3,{id:"no_example",children:(0,o.jsx)(n.code,{children:"no_example"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Optional"})," To avoid getting packages in ",(0,o.jsx)(n.code,{children:"example/"})," when running ",(0,o.jsx)(n.code,{children:"dart pub get"})," (if it exists)."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Default"})," ",(0,o.jsx)(n.code,{children:"false"})]}),"\n",(0,o.jsx)(n.h2,{id:"secrets",children:"Secrets"}),"\n",(0,o.jsx)(n.h3,{id:"ssh_key",children:(0,o.jsx)(n.code,{children:"ssh_key"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Optional"})," An SSH key used to access private repositories when installing dependencies."]}),"\n",(0,o.jsx)(n.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"name: My Dart Workflow\n\non: pull_request\n\njobs:\n  build:\n    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/dart_package.yml@v1\n    with:\n      coverage_excludes: '*.g.dart'\n      dart_sdk: 'stable'\n      platform: 'chrome,vm'\n      working_directory: 'examples/my_dart_package'\n    secrets:\n      ssh_key: ${{secrets.EXAMPLE_KEY}}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>c});var r=s(6540);const o={},l=r.createContext(o);function d(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);