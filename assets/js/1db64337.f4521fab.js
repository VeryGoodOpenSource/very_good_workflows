"use strict";(self.webpackChunkworkflows_docs=self.webpackChunkworkflows_docs||[]).push([[372],{3905:(e,r,o)=>{o.d(r,{Zo:()=>c,kt:()=>d});var t=o(7294);function n(e,r,o){return r in e?Object.defineProperty(e,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[r]=o,e}function a(e,r){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),o.push.apply(o,t)}return o}function s(e){for(var r=1;r<arguments.length;r++){var o=null!=arguments[r]?arguments[r]:{};r%2?a(Object(o),!0).forEach((function(r){n(e,r,o[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(o,r))}))}return e}function l(e,r){if(null==e)return{};var o,t,n=function(e,r){if(null==e)return{};var o,t,n={},a=Object.keys(e);for(t=0;t<a.length;t++)o=a[t],r.indexOf(o)>=0||(n[o]=e[o]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)o=a[t],r.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var i=t.createContext({}),u=function(e){var r=t.useContext(i),o=r;return e&&(o="function"==typeof e?e(r):s(s({},r),e)),o},c=function(e){var r=u(e.components);return t.createElement(i.Provider,{value:r},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},w=t.forwardRef((function(e,r){var o=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(o),w=n,d=p["".concat(i,".").concat(w)]||p[w]||f[w]||a;return o?t.createElement(d,s(s({ref:r},c),{},{components:o})):t.createElement(d,s({ref:r},c))}));function d(e,r){var o=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=o.length,s=new Array(a);s[0]=w;var l={};for(var i in r)hasOwnProperty.call(r,i)&&(l[i]=r[i]);l.originalType=e,l[p]="string"==typeof e?e:n,s[1]=l;for(var u=2;u<a;u++)s[u]=o[u];return t.createElement.apply(null,s)}return t.createElement.apply(null,o)}w.displayName="MDXCreateElement"},6777:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>i,contentTitle:()=>s,default:()=>f,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var t=o(7462),n=(o(7294),o(3905));const a={sidebar_position:1},s="Overview",l={unversionedId:"overview",id:"overview",title:"Overview",description:"GitHub workflows are configurable, automated processes that can run at various points during the development process. For example, a workflow can run when a pull request is created or updated to perform various code quality checks before allowing the changes to be merged.",source:"@site/docs/overview.md",sourceDirName:".",slug:"/overview",permalink:"/docs/overview",draft:!1,editUrl:"https://github.com/VeryGoodOpenSource/very_good_workflows/tree/main/site/docs/overview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Workflows",permalink:"/docs/category/workflows"}},i={},u=[{value:"Quick Start \ud83d\ude80",id:"quick-start-",level:2}],c={toc:u},p="wrapper";function f(e){let{components:r,...o}=e;return(0,n.kt)(p,(0,t.Z)({},c,o,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"overview"},"Overview"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions"},"GitHub workflows")," are configurable, automated processes that can run at various points during the development process. For example, a workflow can run when a pull request is created or updated to perform various code quality checks before allowing the changes to be merged."),(0,n.kt)("p",null,"Very Good Workflows is a collection of workflows that we use at VGV to run automated checks in our CI pipelines. While built by VGV to be used internally, they can be used by anyone."),(0,n.kt)("h2",{id:"quick-start-"},"Quick Start \ud83d\ude80"),(0,n.kt)("p",null,"To get started, add Very Good Workflows to an existing GitHub workflow:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"# A reusable workflow for Dart packages\nuses: VeryGoodOpenSource/very_good_workflows/.github/workflows/dart_package.yml@v1\n\n# A reusable workflow for Flutter packages\nuses: VeryGoodOpenSource/very_good_workflows/.github/workflows/flutter_package.yml@v1\n\n# A reusable workflow for ensuring commits are semantic\nuses: VeryGoodOpenSource/very_good_workflows/.github/workflows/semantic_pull_request.yml@v1\n\n# A reusable workflow for verifying package scores on pub.dev\nuses: VeryGoodOpenSource/very_good_workflows/.github/workflows/pana.yml@v1\n\n# A reusable workflow for running a spell check\nuses: VeryGoodOpenSource/very_good_workflows/.github/workflows/spell_check.yml@v1\n\n# A reusable workflow for publishing Flutter packages\nuses: VeryGoodOpenSource/very_good_workflows/.github/workflows/flutter_pub_publish.yml@v1\n\n# A reusable workflow for publishing Dart packages\nuses: VeryGoodOpenSource/very_good_workflows/.github/workflows/dart_pub_publish.yml@v1\n\n# A reusable workflow for publishing Mason bricks\nuses: VeryGoodOpenSource/very_good_workflows/.github/workflows/mason_publish.yml@v1\n\n")))}f.isMDXComponent=!0}}]);