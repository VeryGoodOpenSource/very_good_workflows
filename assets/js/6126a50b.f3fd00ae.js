"use strict";(self.webpackChunkworkflows_docs=self.webpackChunkworkflows_docs||[]).push([[138],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=s(n),k=a,m=d["".concat(p,".").concat(k)]||d[k]||u[k]||o;return n?r.createElement(m,l(l({ref:t},c),{},{components:n})):r.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=k;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[d]="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},5617:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:1},l="Dart Package",i={unversionedId:"workflows/dart_package",id:"workflows/dart_package",title:"Dart Package",description:"This workflow runs helpful checks on a Dart package according to the steps below. As with any workflow, it can be customized.",source:"@site/docs/workflows/dart_package.md",sourceDirName:"workflows",slug:"/workflows/dart_package",permalink:"/docs/workflows/dart_package",draft:!1,editUrl:"https://github.com/VeryGoodOpenSource/very_good_workflows/tree/main/site/docs/workflows/dart_package.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Workflows",permalink:"/docs/category/workflows"},next:{title:"Dart Pub Publish",permalink:"/docs/workflows/dart_pub_publish"}},p={},s=[{value:"Steps",id:"steps",level:2},{value:"Inputs",id:"inputs",level:2},{value:"<code>concurrency</code>",id:"concurrency",level:3},{value:"<code>coverage_excludes</code>",id:"coverage_excludes",level:3},{value:"<code>dart_sdk</code>",id:"dart_sdk",level:3},{value:"<code>format_line_length</code>",id:"format_line_length",level:3},{value:"<code>min_coverage</code>",id:"min_coverage",level:3},{value:"<code>working_directory</code>",id:"working_directory",level:3},{value:"<code>analyze_directories</code>",id:"analyze_directories",level:3},{value:"<code>format_directories</code>",id:"format_directories",level:3},{value:"<code>check_ignore</code>",id:"check_ignore",level:3},{value:"<code>report_on</code>",id:"report_on",level:3},{value:"<code>runs_on</code>",id:"runs_on",level:3},{value:"<code>setup</code>",id:"setup",level:3},{value:"<code>platform</code>",id:"platform",level:3},{value:"Example Usage",id:"example-usage",level:2}],c={toc:s},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"dart-package"},"Dart Package"),(0,a.kt)("p",null,"This workflow runs helpful checks on a Dart package according to the steps below. As with any workflow, it can be customized."),(0,a.kt)("h2",{id:"steps"},"Steps"),(0,a.kt)("p",null,"The Dart package workflow consists of the following steps:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Install dependencies"),(0,a.kt)("li",{parentName:"ol"},"Format"),(0,a.kt)("li",{parentName:"ol"},"Analyze"),(0,a.kt)("li",{parentName:"ol"},"Run tests"),(0,a.kt)("li",{parentName:"ol"},"Check code coverage")),(0,a.kt)("h2",{id:"inputs"},"Inputs"),(0,a.kt)("h3",{id:"concurrency"},(0,a.kt)("inlineCode",{parentName:"h3"},"concurrency")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Optional")," The number of concurrent test suites run."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Default")," ",(0,a.kt)("inlineCode",{parentName:"p"},"4")),(0,a.kt)("h3",{id:"coverage_excludes"},(0,a.kt)("inlineCode",{parentName:"h3"},"coverage_excludes")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Optional")," List of paths to exclude from the coverage report, separated by an empty space. Supports ",(0,a.kt)("inlineCode",{parentName:"p"},"globs")," to describe file patterns."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Default")," ",(0,a.kt)("inlineCode",{parentName:"p"},'""')),(0,a.kt)("h3",{id:"dart_sdk"},(0,a.kt)("inlineCode",{parentName:"h3"},"dart_sdk")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Optional")," Which Dart SDK version to use. It can be a version (e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"2.12.0"),") or a channel (e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"stable"),"):"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Default")," ",(0,a.kt)("inlineCode",{parentName:"p"},'"stable"')),(0,a.kt)("h3",{id:"format_line_length"},(0,a.kt)("inlineCode",{parentName:"h3"},"format_line_length")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Optional")," The preferred line length preferred for running the ",(0,a.kt)("inlineCode",{parentName:"p"},"dart format")," command. Be aware that this does not change the behavior of the analysis step and longer lines could still make the workflow fail if the rule ",(0,a.kt)("inlineCode",{parentName:"p"},"lines_longer_than_80_chars")," is used."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Default")," ",(0,a.kt)("inlineCode",{parentName:"p"},'"80"')),(0,a.kt)("h3",{id:"min_coverage"},(0,a.kt)("inlineCode",{parentName:"h3"},"min_coverage")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Optional")," The minimum coverage percentage allowed."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Default")," 100"),(0,a.kt)("h3",{id:"working_directory"},(0,a.kt)("inlineCode",{parentName:"h3"},"working_directory")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Optional")," The path to the root of the Dart package."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Default")," ",(0,a.kt)("inlineCode",{parentName:"p"},'"."')),(0,a.kt)("h3",{id:"analyze_directories"},(0,a.kt)("inlineCode",{parentName:"h3"},"analyze_directories")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Optional")," A space-separated list of folders that should be analyzed."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Default")," ",(0,a.kt)("inlineCode",{parentName:"p"},'"lib test"')),(0,a.kt)("h3",{id:"format_directories"},(0,a.kt)("inlineCode",{parentName:"h3"},"format_directories")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Optional")," A space-separated list of folders that should be formatted."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Default")," ",(0,a.kt)("inlineCode",{parentName:"p"},'"."')),(0,a.kt)("h3",{id:"check_ignore"},(0,a.kt)("inlineCode",{parentName:"h3"},"check_ignore")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Optional")," Allows ignoring lines from ","[coverage][coverage]","."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Default")," ",(0,a.kt)("inlineCode",{parentName:"p"},"false")),(0,a.kt)("h3",{id:"report_on"},(0,a.kt)("inlineCode",{parentName:"h3"},"report_on")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Optional")," A comma-separated list of folders that should be checked in code coverage."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Default")," ",(0,a.kt)("inlineCode",{parentName:"p"},'"lib"')),(0,a.kt)("h3",{id:"runs_on"},(0,a.kt)("inlineCode",{parentName:"h3"},"runs_on")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Optional")," The operating system on which to run the workflow."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Default")," ",(0,a.kt)("inlineCode",{parentName:"p"},'"ubuntu-latest"')),(0,a.kt)("h3",{id:"setup"},(0,a.kt)("inlineCode",{parentName:"h3"},"setup")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Optional")," A command that should be executed immediately after dependencies are installed."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Default")," ",(0,a.kt)("inlineCode",{parentName:"p"},'""')),(0,a.kt)("h3",{id:"platform"},(0,a.kt)("inlineCode",{parentName:"h3"},"platform")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Optional")," A comma-separated list of platforms on which to run the tests.\n",(0,a.kt)("inlineCode",{parentName:"p"},"[vm (default), chrome, firefox, safari, node]")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Default")," ",(0,a.kt)("inlineCode",{parentName:"p"},'"vm"')),(0,a.kt)("h2",{id:"example-usage"},"Example Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"name: My Dart Workflow\n\non: pull_request\n\njobs:\n  build:\n    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/dart_package.yml@v1\n    with:\n      coverage_excludes: '*.g.dart'\n      dart_sdk: 'stable'\n      platform: 'chrome,vm'\n      working_directory: 'examples/my_dart_package'\n")))}u.isMDXComponent=!0}}]);